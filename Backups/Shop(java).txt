package com.example.facepay;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.constraintlayout.solver.widgets.Snapshot;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.cepheuen.elegantnumberbutton.view.ElegantNumberButton;
import com.firebase.ui.database.FirebaseRecyclerAdapter;
import com.firebase.ui.database.FirebaseRecyclerOptions;
import com.firebase.ui.database.SnapshotParser;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.Query;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;
import java.util.List;

public class Shop extends AppCompatActivity {

    private  TextView tvbalance,tvTotal;
    private ImageView back;
    private FloatingActionButton fab;
    private int balance;
    DatabaseReference database;

    private RecyclerView recyclerView;
    private LinearLayoutManager linearLayoutManager;
    private FirebaseRecyclerAdapter adapter;


    String name,weight;
    int price;
    int total=0;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
                WindowManager.LayoutParams.FLAG_FULLSCREEN);
        setContentView(R.layout.activity_shop);

        tvbalance = findViewById(R.id.tvBal);
        back = findViewById(R.id.back);
        fab = findViewById(R.id.floating_action_button);
        recyclerView = findViewById(R.id.list);
        tvTotal = findViewById(R.id.tvTotal);

        database = FirebaseDatabase.getInstance().getReference();
        database.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                // This method is called once with the initial value and again
                // whenever data at this location is updated.
                balance =  Integer.parseInt(dataSnapshot.child("Users").child(FirebaseAuth.getInstance().getCurrentUser().getUid()).child("Balance").getValue().toString());
                tvbalance.setText(Integer.toString(balance));

            }

            @Override
            public void onCancelled(DatabaseError error) {
                // Failed to read value

            }
        });






        back.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(Shop.this,Home.class);
                startActivity(intent);
            }
        });
        tvbalance.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(Shop.this,Wallet.class);
                startActivity(intent);
            }
        });


        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(Shop.this,ItemScanner.class);
                startActivity(intent);
            }
        });



        linearLayoutManager = new LinearLayoutManager(this);
        linearLayoutManager.setReverseLayout(true);
        linearLayoutManager.setStackFromEnd(true);
        recyclerView.setLayoutManager(linearLayoutManager);
        recyclerView.setHasFixedSize(true);
        fetch();


    }

    private void fetch() {
        Query query = FirebaseDatabase.getInstance()
                .getReference()
                .child("UserCart").child(FirebaseAuth.getInstance().getCurrentUser().getUid());

        FirebaseRecyclerOptions<ModelShop> options = new FirebaseRecyclerOptions.Builder<ModelShop>()
                .setQuery(query, new SnapshotParser<ModelShop>() {
                    @NonNull
                    @Override
                    public ModelShop parseSnapshot(@NonNull DataSnapshot snapshot) {
                        return new ModelShop(snapshot.child("Name").getValue().toString(),snapshot.child("Weight").getValue().toString(),
                                Integer.parseInt(snapshot.child("Price").getValue().toString()),
                                Integer.parseInt(snapshot.child("Quantity").getValue().toString()),snapshot.child("ID").getValue().toString());
                    }
                }).build();

        adapter = new FirebaseRecyclerAdapter<ModelShop,ViewHolder>(options){

            @NonNull
            @Override
            public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
                View view = LayoutInflater.from(parent.getContext())
                        .inflate(R.layout.list_item_shop, parent, false);

                return new ViewHolder(view);
            }

            @Override
            protected void onBindViewHolder(@NonNull final ViewHolder holder, int i, @NonNull final ModelShop modelShop) {
                holder.setProduct(modelShop.getProduct());
                holder.setWeight(modelShop.getWeight());
                holder.setAmount(String.valueOf(modelShop.getAmount()*modelShop.getQuantity()));
                holder.setQuantity(String.valueOf(modelShop.getQuantity()));

                holder.quantity.setOnValueChangeListener(new ElegantNumberButton.OnValueChangeListener() {
                    @Override
                    public void onValueChange(ElegantNumberButton view, int oldValue, int newValue) {
                        DatabaseReference dref =FirebaseDatabase.getInstance().getReference();
                        if(Integer.parseInt(holder.quantity.getNumber()) == 0){
                            dref.child("UserCart").child(FirebaseAuth.getInstance().getCurrentUser().getUid()).child(modelShop.getId()).removeValue();
                        }else {

                            dref.child("UserCart").child(FirebaseAuth.getInstance().getCurrentUser().getUid()).child(modelShop.getId()).child("Quantity").setValue(newValue);
                        }
                    }
                });


            }


            @Override
            public void onDataChanged() {
                super.onDataChanged();
                total=0;
                for(int i=0;i<adapter.getItemCount();i++){
                    ModelShop modelShop = (ModelShop) adapter.getItem(i);
                    int amt = modelShop.getAmount();
                    int qnt = modelShop.getQuantity();
                    total = total + (amt*qnt);
                }

                tvTotal.setText("₹ "+total);
            }


        };
        recyclerView.setAdapter(adapter);
    }

    public class ViewHolder extends RecyclerView.ViewHolder {
        public LinearLayout root;
        public TextView product,weight,amount;
        public ElegantNumberButton quantity;

        public ViewHolder(View itemView) {
            super(itemView);
            root = itemView.findViewById(R.id.list_root);
            product = itemView.findViewById(R.id.product);
            weight = itemView.findViewById(R.id.weight);
            amount = itemView.findViewById(R.id.amount);
            quantity = itemView.findViewById(R.id.quantity);
        }

        public void setProduct(String string) {
            product.setText(string);
        }


        public void setWeight(String string) {
            weight.setText(string);
        }

        public void setAmount(String string) {
            amount.setText("₹ "+string);
        }
        public void setQuantity(String string) {
            quantity.setNumber(string);
        }
    }

    @Override
    protected void onStart() {
        super.onStart();
        adapter.startListening();
    }

    @Override
    protected void onStop() {
        super.onStop();
        adapter.stopListening();
    }
}
